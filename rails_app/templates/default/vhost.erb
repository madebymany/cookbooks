<VirtualHost *:80>

  ServerName <%= node[:rails_app][:canonical_domain] %>
  <% node[:rails_app][:domain_aliases].each do |a| %>
  ServerAlias <%= a %>
  <% end %>

  CustomLog <%= node[:apache][:log_dir] %>/access.log combined
  DocumentRoot <%= node[:rails_app][:home] %>/current/public

  RailsEnv production

<% if node[:rails_app][:headers] %>
  <% node[:rails_app][:headers].each do |header| %>
  Header <%= header %>
  <% end %>
<% end %>

  <% node[:rails_app][:passenger].each do |setting, value| -%> 
    <%= "Passenger"+setting.gsub(/(^|_|\s+)([a-z])/){$2.upcase} %> <%= value %>
    <% end unless node[:rails_app][:passenger].nil? -%>

  <Directory "<%= node[:rails_app][:home] %>/current/public">
    Header set Cache-Control "max-age=315360000"
    Options FollowSymLinks
    AllowOverride All
    Order allow,deny
    Allow from all

  </Directory>

  <Directory "<%= node[:rails_app][:home] %>/current/public/system">
    Header set Cache-Control "no-cache"
  </Directory>

  # Rails specific rewrite rules
  RewriteEngine On

  # Check for maintenance file and redirect all requests
  ErrorDocument 503 /system/maintenance.html
  RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
  RewriteCond %{SCRIPT_FILENAME} !^/(system|stylesheets|images|javascripts)
  RewriteRule ^.*$ /system/maintenance.html [R=503,L]

  # Rewrite (some) domains to canonical domain
  <% if node[:rails_app][:redirections] %>
    <% node[:rails_app][:redirections].each do |domain|
       pattern = domain.sub(/\$$/, "(:.*)?$").gsub(/\./, "\\\\.") %>
  RewriteCond %{HTTP_HOST} <%= pattern %> [NC]
  RewriteRule ^/(.*) http://<%= node[:rails_app][:canonical_domain] %>/$1 [R=301,L]
    <% end %>
  <% end %>

  # Deflate
  AddOutputFilterByType DEFLATE text/plain text/html text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript
  BrowserMatch ^Mozilla/4 gzip-only-text/html
  BrowserMatch ^Mozilla/4.0[678] no-gzip
  BrowserMatch \bMSIE !no-gzip !gzip-only-text/html

  <% if node[:rails_app][:setenvif] %>
    <% node[:rails_app][:setenvif].each do |seif| %>
      SetEnvIf <%= seif[:attribute] %> "<%= seif[:regex] %>" <%= seif[:env] %>
    <% end %>
  <% end %>


  # Add any access limit directives here
  <Location />
    <% if node[:rails_app][:htpasswd] %>
    AuthName "Password required"
    AuthType Basic
    AuthUserFile /etc/apache2/htpasswd
    Require valid-user
    <% end %>
    <% if node[:rails_app][:access] %>
      Order <%= node[:rails_app][:access][:order] %>
      <% node[:rails_app][:access][:acl].each do |al| %>
        <%= al[:directive] %> from <%= al[:source] %>
      <% end unless node[:rails_app][:access][:acl].nil?%>
      <% if node[:rails_app][:access][:satisfy] =~ /\Aany\z/i %>
        Satisfy Any
      <% end %>
    <% end %>
  </Location>

</VirtualHost>
